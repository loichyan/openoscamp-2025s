(function() {
    var type_impls = Object.fromEntries([["evering_threaded",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Runtime%3CP,+U%3E\" class=\"impl\"><a href=\"#impl-Runtime%3CP,+U%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;P, U&gt; Runtime&lt;P, U&gt;<div class=\"where\">where\n    U: Uring,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(uring: U) -&gt; Runtime&lt;P, U&gt;</h4></section><section id=\"method.run_on\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">run_on</a>&lt;C, Fut&gt;(&amp;self, complete: C, fut: Fut) -&gt; RunOn&lt;'_, P, U, C, Fut&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&lt;U as Uring&gt;::B),\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div></h4></section><section id=\"method.block_on\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">block_on</a>&lt;T&gt;(&amp;self, fut: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = T&gt;) -&gt; T</h4></section><section id=\"method.into_uring\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_uring</a>(self) -&gt; U</h4></section><section id=\"method.spawn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">spawn</a>&lt;T, F, Rt&gt;(handle: Rt, fut: F) -&gt; Task&lt;T&gt;<div class=\"where\">where\n    T: 'static,\n    F: 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = T&gt;,\n    Rt: RuntimeHandle&lt;Payload = P, Uring = U&gt; + ExecutorHandle,</div></h4></section><section id=\"method.submit\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">submit</a>&lt;T, Rt&gt;(\n    handle: Rt,\n    data: T,\n    new_entry: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(OpId, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; &lt;U as Uring&gt;::A,\n) -&gt; Op&lt;T&gt;<div class=\"where\">where\n    T: Completable&lt;Driver = Rt&gt;,\n    Rt: RuntimeHandle&lt;Payload = P, Uring = U&gt; + DriverHandle&lt;Payload = P, Ext = &lt;U as Uring&gt;::Ext&gt;,\n    &lt;U as Uring&gt;::Ext: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section><section id=\"method.submit_ext\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">submit_ext</a>&lt;T, Rt&gt;(\n    handle: Rt,\n    ext: &lt;U as Uring&gt;::Ext,\n    data: T,\n    new_entry: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(OpId, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a>) -&gt; &lt;U as Uring&gt;::A,\n) -&gt; Op&lt;T&gt;<div class=\"where\">where\n    T: Completable&lt;Driver = Rt&gt;,\n    Rt: RuntimeHandle&lt;Payload = P, Uring = U&gt; + DriverHandle&lt;Payload = P, Ext = &lt;U as Uring&gt;::Ext&gt;,</div></h4></section></div></details>",0,"evering_threaded::runtime::RuntimeInner"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3750]}