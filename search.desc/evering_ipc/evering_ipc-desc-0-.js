searchState.loadedDescShard("evering_ipc", 0, "Contains the error value\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nContains the success value\n<code>Result&lt;T, Error&gt;</code>\nGet the backtrace for this Error.\nAn iterator of the chain of source errors contained by …\nWrap the error value with additional context.\nAttempt to downcast the error object to a concrete type.\nDowncast this error object by mutable reference.\nDowncast this error object by reference.\nReturns the argument unchanged.\nConstruct an error object from a type-erased standard …\nCalls <code>U::from(self)</code>.\nConvert to a standard library error trait object.\nReturns true if <code>E</code> is the type held by this error object.\nCreate a new error object from a printable error message.\nCreate a new error object from any error type.\nConvert to a standard library error trait object.\nThe lowest level cause of this error — this error’s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ShmHeader</code> contains necessary metadata of a shared memory …\nSafety\nSafety\nSafety\nSafety\nSafety\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSafety\nSafety\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSafety")