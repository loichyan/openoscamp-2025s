searchState.loadedDescShard("evering", 0, "<strong>evering</strong> is not <strong>ever</strong> a <strong>ring</strong>\n此模块用于管理操作生命周期．\n此模块定义了用于异步环境下的操作．\n此模块用于管理共享的内存资源．\n…\nCompletes a operation. It returns the given <code>payload</code> as an …\nCompletes a operation with the submitted extension.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSubmits an operation if there is sufficient spare …\nSafety\nCancels this operation.\nTransforms the received payload to the corresponding …\nCompletes this operation with the submitted extension.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDrops this <code>Uring</code> and all enqueued entries.\nDrops this <code>Uring</code> and all enqueued entries.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSafety\nSafety\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the remote <code>Uring</code> is not dropped.")